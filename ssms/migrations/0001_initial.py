# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-09-08 06:32
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ssms.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal', models.CharField(choices=[('Veg', 'Veg'), ('Non Veg', 'Non Veg')], default='Veg', max_length=16, verbose_name='Meal Type')),
                ('batch_name', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='', max_length=32, verbose_name='Batch Name')),
                ('color', models.CharField(choices=[('Pink', 'Pink'), ('Yellow', 'Yellow'), ('Blue', 'Blue'), ('Green', 'Green')], max_length=10, verbose_name='Batch Color')),
                ('timing', models.CharField(max_length=16, verbose_name='Batch Time')),
            ],
        ),
        migrations.CreateModel(
            name='Both',
            fields=[
                ('b_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Veg+Non Veg Grub Id')),
                ('veg_venue', models.CharField(choices=[(b'VKB Mess', b'VKB Mess'), (b'CVR Mess', b'CVR Mess'), (b'RPA Mess', b'RPA Mess'), (b'RB Mess', b'RB Mess'), (b'SV Mess', b'SV Mess')], max_length=16, verbose_name='Veg Location')),
                ('non_veg_venue', models.CharField(choices=[(b'VKB Mess', b'VKB Mess'), (b'CVR Mess', b'CVR Mess'), (b'RPA Mess', b'RPA Mess'), (b'RB Mess', b'RB Mess'), (b'SV Mess', b'SV Mess')], max_length=16, verbose_name='Non Veg Location')),
                ('veg_price', models.IntegerField(default=0, verbose_name='Veg Price')),
                ('non_veg_price', models.IntegerField(default=0, verbose_name='Non Veg price')),
                ('veg_images', models.ImageField(upload_to=ssms.models.content_album_name2, verbose_name='Veg Meal Image')),
                ('non_veg_images', models.ImageField(upload_to=ssms.models.content_album_name2, verbose_name='Non Veg Image')),
                ('veg_batch_allocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=6)),
                ('nonveg_batch_allocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='DateMailStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime.now)),
                ('mails', models.IntegerField(default=0, verbose_name='Mails Sent')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Unique Stud Id')),
                ('stugm_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Student BITS Id')),
                ('meal_type', models.CharField(max_length=10, verbose_name='Meal type')),
                ('quality', models.CharField(blank=True, max_length=2, null=True)),
                ('hygiene', models.CharField(blank=True, max_length=2, null=True)),
                ('taste', models.CharField(blank=True, max_length=2, null=True)),
                ('rating', models.CharField(blank=True, max_length=2, null=True)),
                ('most_liked_dish', models.CharField(blank=True, max_length=50, null=True)),
                ('others', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grub',
            fields=[
                ('gm_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Grub UUID')),
                ('name', models.CharField(max_length=32, verbose_name='Grub Name')),
                ('meal', models.CharField(choices=[('Veg', 'Veg'), ('Non Veg', 'Non Veg'), ('Both', 'Both')], default='Veg', max_length=16, verbose_name='Meal Type')),
                ('reg_date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Registration Date')),
                ('date', models.DateField(default=datetime.datetime.now)),
                ('deadline', models.DateField(default=datetime.datetime.now)),
                ('deadline2', models.DateField(default=datetime.datetime.now)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=128)),
                ('excel', models.FileField(upload_to=ssms.models.content_album_name)),
                ('mails', models.CharField(choices=[('Sent', 'Sent'), ('Not Sent', 'Not Sent'), ('Sent2', 'Sent2')], default='Not Sent', max_length=128)),
                ('spot_signing', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=6, verbose_name='Spot Signing Available')),
                ('batch_allocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=6, verbose_name='Batch Allocated')),
                ('no_batch', models.IntegerField(default=0, verbose_name='No. of batches')),
            ],
        ),
        migrations.CreateModel(
            name='Grub_Coord',
            fields=[
                ('cg_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Coordinator UUID')),
                ('cg_name', models.CharField(max_length=32, verbose_name='Coordinator Name')),
                ('cg_bitsid', models.CharField(max_length=32, verbose_name='Coordinator Bits ID')),
                ('assoc_name', models.CharField(max_length=64, verbose_name='Association')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=32)),
                ('date', models.DateTimeField(auto_now=True)),
                ('reg_by', models.CharField(max_length=32)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Grub_Invalid_Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=32, verbose_name='Bits Id')),
                ('meal', models.CharField(choices=[('Veg', 'Veg'), ('Non Veg', 'Non Veg')], default='Veg', max_length=16, verbose_name='Mealtype Selected')),
                ('gm_id', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id')),
            ],
        ),
        migrations.CreateModel(
            name='Grub_Student',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Unique Student Id')),
                ('name', models.CharField(max_length=32)),
                ('student_id', models.CharField(max_length=32, verbose_name='Bits Id')),
                ('user_id', models.CharField(db_index=True, max_length=32, verbose_name='Bits Email Id')),
                ('mail', models.CharField(choices=[('Sent', 'Sent'), ('Not Sent', 'Not Sent'), ('Sent2', 'Sent2')], default='Not Sent', max_length=128)),
                ('meal', models.CharField(choices=[('Veg', 'Veg'), ('Non Veg', 'Non Veg')], default='Veg', max_length=16, verbose_name='Mealtype Selected')),
                ('status', models.CharField(choices=[('Signed Up', 'Signed Up'), ('Opted Out', 'Opted Out')], max_length=128)),
                ('room', models.CharField(default='303', max_length=32, verbose_name='Room No.')),
                ('bhawan', models.CharField(default='VK', max_length=32, verbose_name='Bhawan')),
                ('feedback_given', models.IntegerField(default=0, verbose_name='Feedback given')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ssms.Batch', verbose_name='Batch')),
                ('gm_id', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id')),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('meal_type', models.CharField(max_length=60)),
                ('day', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NonVeg',
            fields=[
                ('n_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Non Veg Grub ID')),
                ('n_venue', models.CharField(choices=[(b'VKB Mess', b'VKB Mess'), (b'CVR Mess', b'CVR Mess'), (b'RPA Mess', b'RPA Mess'), (b'RB Mess', b'RB Mess'), (b'SV Mess', b'SV Mess')], max_length=16, verbose_name='Non Veg Location')),
                ('n_price', models.IntegerField(default=0, verbose_name='Non Veg Price')),
                ('n_images', models.ImageField(upload_to=ssms.models.content_album_name2, verbose_name='Non Veg Meal image')),
                ('batch_allocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=6)),
                ('gm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Unique Stud Id')),
                ('name', models.CharField(max_length=64)),
                ('bits_id', models.CharField(max_length=32, unique=True, verbose_name='BITS ID')),
                ('bhawan', models.CharField(max_length=32)),
                ('room_no', models.CharField(max_length=4, verbose_name='Room No.')),
                ('user_id', models.CharField(db_index=True, max_length=32, verbose_name='Bits Email Id')),
            ],
        ),
        migrations.CreateModel(
            name='Veg',
            fields=[
                ('v_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Veg Grub ID')),
                ('v_venue', models.CharField(choices=[(b'VKB Mess', b'VKB Mess'), (b'CVR Mess', b'CVR Mess'), (b'RPA Mess', b'RPA Mess'), (b'RB Mess', b'RB Mess'), (b'SV Mess', b'SV Mess')], max_length=16, verbose_name='Veg Location')),
                ('v_price', models.IntegerField(default=0, verbose_name='Veg Price')),
                ('v_images', models.ImageField(upload_to=ssms.models.content_album_name2, verbose_name='Veg Meal image')),
                ('batch_allocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=6)),
                ('gm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id')),
            ],
        ),
        migrations.AddField(
            model_name='items',
            name='meal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Meal'),
        ),
        migrations.AddField(
            model_name='grub',
            name='cg_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub_Coord', verbose_name='Coordinator Id'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='gm_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='both',
            name='gm_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id'),
        ),
        migrations.AddField(
            model_name='batch',
            name='gm_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssms.Grub', verbose_name='Grub Id'),
        ),
        migrations.AlterUniqueTogether(
            name='grub_student',
            unique_together=set([('student_id', 'gm_id', 'status')]),
        ),
        migrations.AlterUniqueTogether(
            name='grub_invalid_students',
            unique_together=set([('student_id', 'gm_id')]),
        ),
    ]
